% DesignANN
%
% C. T. Clarke based on work by Assad al Shueli
% Edited by L F Tiong 06/05/2016
%
% This code configures Matlab and trains a set of ANNs to detect APs at
% particular velocities.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Parameter setup
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Basic System parameters
Parameters = struct (                 ...
   'Electrodes',              10    , ...
   'ElectrodeSpacing',      0.5e-3    , ...
   'SamplingFrequency',      1e5    , ...
   'ActionPotentialType',   'tmap2' , ...
   'StartTestVelocity',        5    , ...
   'StepTestVelocity',         1    , ...
   'EndTestVelocity',          40    , ...
   'MatchRepeats',             20    , ...
   'NoiseLevel',               0    , ...
   'AnnLength',          [120, 1]   , ...
   'HiddenLayerSize',         1     , ...
   'ActivationFcn1',       'tansig' , ...
   'ActivationFcn2',       'purelin', ...
   'ActivationFcn3',        'poslin', ...
   'ActivationFcn4',       'softmax', ...
   'TrainingMethod',       'trainlm', ...
   'TargetOutput',           'pulse', ...
   'MaxIterations',          100    , ...
   'MinError',                 0    , ...
   'APType',              'BiPolar', ...
   'channels',                 5);

% ANN velocities to train for
%AnnVelocities = [80, 100, 120];
AnnVelocities = [10, 20, 30];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Design each ANN
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ANN = DesignAnn(AnnVelocities, Parameters);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Analyse the resultant ANNs
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%AnalyseAnn(ANN, AnnVelocities, Parameters);
